#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include "wordCompletion.h"

using namespace std;

wordCompletion::wordCompletion() {
  Dict = new Trie();
  id_counter = 0;
}

wordCompletion::~wordCompletion() {
  delete Dict;
}

int wordCompletion::access(string w) {
// pre: w is a non-empty word with characters in {a..z}
// post: w is added to structure if not previous in; its frequency is increased by 1
// 	returns ID of word w
  int id = checkId(w);
  if (id == -1) {
    id = registerKey(w);
    Dict->insert(w, id);
  } else {
    Dict->changePriority(w, id);
  }
  return id;
}

vector<vector<int> > wordCompletion::getCompletions(string w, int k) {
// pre: Dictionary is non-empty. w is non-empty. k>=1.
// post: see assignment for what to return

  vector<vector<int> > A(w.size()+1, vector<int>(k));
  vector<Trie*> path;
  Dict->search(w, path);
  for (int i = 0; i < path.size(); ++i) {
    if (path[i])
      A[i] = path[i]->getKMax(k);
    else
      A[i] = vector<int>(k, -1);
  }
  return A;
}

#ifndef TESTING

int main() {
  wordCompletion * h = new wordCompletion();

  h->access("adult");
  h->access("adult");
  h->access("adult");
  h->access("adult");
  h->access("adult");
  h->access("adult");
  h->access("adult");
  h->access("adult");
  h->access("adult");
  h->access("adult");
  h->access("adult");
  h->access("adult");
  h->access("aeroplane");
  h->access("aeroplane");
  h->access("aeroplane");
  h->access("aeroplane");
  h->access("aeroplane");
  h->access("aeroplane");
  h->access("aeroplane");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("air");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("aircraft");
  h->access("airforce");
  h->access("airforce");
  h->access("airforce");
  h->access("airforce");
  h->access("airport");
  h->access("airport");
  h->access("airport");
  h->access("airport");
  h->access("airport");
  h->access("airport");
  h->access("airport");
  h->access("airport");
  h->access("airport");
  h->access("airport");
  h->access("airport");
  h->access("album");
  h->access("album");
  h->access("album");
  h->access("album");
  h->access("alphabet");
  h->access("alphabet");
  h->access("alphabet");
  h->access("alphabet");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("apple");
  h->access("arm");
  h->access("arm");
  h->access("army");
  h->access("army");
  h->access("army");
  h->access("army");
  h->access("army");
  h->access("army");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("baby");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("backpack");
  h->access("balloon");
  h->access("balloon");
  h->access("balloon");
  h->access("balloon");
  h->access("balloon");
  h->access("balloon");
  h->access("balloon");
  h->access("banana");
  h->access("banana");
  h->access("banana");
  h->access("banana");
  h->access("banana");
  h->access("banana");
  h->access("banana");
  h->access("banana");
  h->access("banana");
  h->access("bank");
  h->access("bank");
  h->access("bank");
  h->access("bank");
  h->access("bank");
  h->access("bank");
  h->access("bank");
  h->access("bank");
  h->access("bank");
  h->access("bank");
  h->access("bank");
  h->access("barbecue");
  h->access("barbecue");
  h->access("barbecue");
  h->access("barbecue");
  h->access("barbecue");
  h->access("barbecue");
  h->access("bathroom");
  h->access("bathroom");
  h->access("bathroom");
  h->access("bathroom");
  h->access("bathroom");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bathtub");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bed");
  h->access("bee");
  h->access("bee");
  h->access("bee");
  h->access("bee");
  h->access("bee");
  h->access("bee");
  h->access("bee");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bible");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bird");
  h->access("bomb");
  h->access("bomb");
  h->access("bomb");
  h->access("bomb");
  h->access("bomb");
  h->access("bomb");
  h->access("book");
  h->access("book");
  h->access("book");
  h->access("book");
  h->access("book");
  h->access("book");
  h->access("book");
  h->access("book");
  h->access("book");
  h->access("boss");
  h->access("boss");
  h->access("boss");
  h->access("boss");
  h->access("boss");
  h->access("boss");
  h->access("boss");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bottle");
  h->access("bowl");
  h->access("bowl");
  h->access("bowl");
  h->access("bowl");
  h->access("bowl");
  h->access("bowl");
  h->access("bowl");
  h->access("bowl");
  h->access("bowl");
  h->access("bowl");
  h->access("box");
  h->access("box");
  h->access("boy");
  h->access("boy");
  h->access("boy");
  h->access("boy");
  h->access("boy");
  h->access("boy");
  h->access("boy");
  h->access("boy");
  h->access("boy");
  h->access("boy");
  h->access("boy");
  h->access("brain");
  h->access("brain");
  h->access("brain");
  h->access("brain");
  h->access("brain");
  h->access("bridge");
  h->access("bridge");
  h->access("bridge");
  h->access("bridge");
  h->access("bridge");
  h->access("bridge");
  h->access("bridge");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("butterfly");
  h->access("button");
  h->access("button");
  h->access("button");
  h->access("button");
  h->access("button");
  h->access("button");
  h->access("button");
  h->access("cappuccino");
  h->access("cappuccino");
  h->access("cappuccino");
  h->access("cappuccino");
  h->access("cappuccino");
  h->access("cappuccino");
  h->access("cappuccino");
  h->access("cappuccino");
  h->access("car");
  h->access("carrace");
  h->access("carrace");
  h->access("carrace");
  h->access("carrace");
  h->access("carrace");
  h->access("carrace");
  h->access("carrace");
  h->access("carrace");
  h->access("carrace");
  h->access("carrace");
  h->access("carrace");
  h->access("carrace");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carpet");
  h->access("carrot");
  h->access("carrot");
  h->access("carrot");
  h->access("carrot");
  h->access("carrot");
  h->access("carrot");
  h->access("carrot");
  h->access("carrot");
  h->access("carrot");
  h->access("carrot");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("cave");
  h->access("chair");
  h->access("chair");
  h->access("chair");
  h->access("chair");
  h->access("chessboard");
  h->access("chessboard");
  h->access("chessboard");
  h->access("chessboard");
  h->access("chessboard");
  h->access("chessboard");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("chief");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("child");
  h->access("chisel");
  h->access("chisel");
  h->access("chisel");
  h->access("chisel");
  h->access("chisel");
  h->access("chisel");
  h->access("chisel");
  h->access("chisel");
  h->access("chisel");
  h->access("chisel");
  h->access("chisel");
  h->access("chisel");
  h->access("chocolates");
  h->access("chocolates");
  h->access("chocolates");
  h->access("chocolates");
  h->access("chocolates");
  h->access("chocolates");
  h->access("chocolates");
  h->access("chocolates");
  h->access("chocolates");
  h->access("chocolates");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("church");
  h->access("circle");
  h->access("circle");
  h->access("circle");
  h->access("circle");
  h->access("circle");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("circus");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clock");
  h->access("clown");
  h->access("clown");
  h->access("clown");
  h->access("clown");
  h->access("clown");
  h->access("coffee");
  h->access("coffee");
  h->access("coffee");
  h->access("coffee");
  h->access("coffee");
  h->access("coffee");
  h->access("coffee");
  h->access("coffeeshop");
  h->access("coffeeshop");
  h->access("coffeeshop");
  h->access("coffeeshop");
  h->access("coffeeshop");
  h->access("coffeeshop");
  h->access("coffeeshop");
  h->access("coffeeshop");
  h->access("comet");
  h->access("comet");
  h->access("comet");
  h->access("comet");
  h->access("comet");
  h->access("comet");
  h->access("comet");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compactdisc");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("compass");
  h->access("computer");
  h->access("computer");
  h->access("computer");
  h->access("computer");
  h->access("computer");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("crystal");
  h->access("cup");
  h->access("cup");
  h->access("cup");
  h->access("cup");
  h->access("cup");
  h->access("cup");
  h->access("cup");
  h->access("cup");
  h->access("cup");
  h->access("cup");
  h->access("cup");
  h->access("cycle");
  h->access("cycle");
  h->access("cycle");
  h->access("cycle");
  h->access("cycle");
  h->access("database");
  h->access("database");
  h->access("desk");
  h->access("desk");
  h->access("desk");
  h->access("desk");
  h->access("desk");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("diamond");
  h->access("dress");
  h->access("dress");
  h->access("dress");
  h->access("dress");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drill");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drink");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("drum");
  h->access("dung");
  h->access("dung");
  h->access("dung");
  h->access("dung");
  h->access("dung");
  h->access("dung");
  h->access("dung");
  h->access("dung");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("ears");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("earth");
  h->access("egg");
  h->access("egg");
  h->access("egg");
  h->access("egg");
  h->access("egg");
  h->access("electricity");
  h->access("electricity");
  h->access("electricity");
  h->access("electricity");
  h->access("electricity");
  h->access("electricity");
  h->access("electricity");
  h->access("electricity");
  h->access("electricity");
  h->access("electricity");
  h->access("electricity");
  h->access("electricity");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("elephant");
  h->access("eraser");
  h->access("eraser");
  h->access("eraser");
  h->access("eraser");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("explosive");
  h->access("eyes");
  h->access("eyes");
  h->access("eyes");
  h->access("eyes");
  h->access("eyes");
  h->access("eyes");
  h->access("eyes");
  h->access("eyes");
  h->access("eyes");
  h->access("eyes");
  h->access("eyes");
  h->access("family");
  h->access("family");
  h->access("family");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("fan");
  h->access("feather");
  h->access("feather");
  h->access("feather");
  h->access("feather");
  h->access("festival");
  h->access("festival");
  h->access("festival");
  h->access("festival");
  h->access("festival");
  h->access("festival");
  h->access("festival");
  h->access("festival");
  h->access("festival");
  h->access("festival");
  h->access("festival");
  h->access("festival");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("film");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("finger");
  h->access("fire");
  h->access("fire");
  h->access("fire");
  h->access("fire");
  h->access("fire");
  h->access("fire");
  h->access("fire");
  h->access("floodlight");
  h->access("floodlight");
  h->access("floodlight");
  h->access("flower");
  h->access("flower");
  h->access("flower");
  h->access("flower");
  h->access("flower");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("foot");
  h->access("fork");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("freeway");
  h->access("fruit");
  h->access("fruit");
  h->access("fruit");
  h->access("fruit");
  h->access("fruit");
  h->access("fruit");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("fungus");
  h->access("game");
  h->access("game");
  h->access("game");
  h->access("game");
  h->access("game");
  h->access("game");
  h->access("game");
  h->access("game");
  h->access("game");
  h->access("game");
  h->access("game");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("garden");
  h->access("gas");
  h->access("gas");
  h->access("gas");
  h->access("gas");
  h->access("gas");
  h->access("gas");
  h->access("gas");
  h->access("gas");
  h->access("gas");
  h->access("gas");
  h->access("gas");
  h->access("gate");
  h->access("gate");
  h->access("gate");
  h->access("gate");
  h->access("gate");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("gemstone");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("girl");
  h->access("gloves");
  h->access("gloves");
  h->access("gloves");
  h->access("gloves");
  h->access("god");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("grapes");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("guitar");
  h->access("hammer");
  h->access("hammer");
  h->access("hammer");
  h->access("hammer");
  h->access("hammer");
  h->access("hammer");
  h->access("hammer");
  h->access("hammer");
  h->access("hammer");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hat");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("hieroglyph");
  h->access("highway");
  h->access("highway");
  h->access("highway");
  h->access("highway");
  h->access("highway");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horoscope");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("horse");
  h->access("hose");
  h->access("hose");
  h->access("hose");
  h->access("hose");
  h->access("hose");
  h->access("hose");
  h->access("hose");
  h->access("hose");
  h->access("hose");
  h->access("hose");
  h->access("hose");
  h->access("ice");
  h->access("ice");
  h->access("ice");
  h->access("ice");
  h->access("ice");
  h->access("ice");
  h->access("ice");
  h->access("ice");
  h->access("ice");
  h->access("ice");
  h->access("ice");
  h->access("ice");
  h->access("icecream");
  h->access("icecream");
  h->access("icecream");
  h->access("icecream");
  h->access("icecream");
  h->access("icecream");
  h->access("icecream");
  h->access("icecream");
  h->access("icecream");
  h->access("icecream");
  h->access("insect");
  h->access("insect");
  h->access("jetfighter");
  h->access("junk");
  h->access("junk");
  h->access("junk");
  h->access("junk");
  h->access("junk");
  h->access("junk");
  h->access("junk");
  h->access("junk");
  h->access("kaleidoscope");
  h->access("kaleidoscope");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("kitchen");
  h->access("knife");
  h->access("knife");
  h->access("knife");
  h->access("knife");
  h->access("knife");
  h->access("knife");
  h->access("knife");
  h->access("knife");
  h->access("leather");
  h->access("leather");
  h->access("leather");
  h->access("leather");
  h->access("leg");
  h->access("leg");
  h->access("leg");
  h->access("leg");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("library");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("liquid");
  h->access("magnet");
  h->access("magnet");
  h->access("magnet");
  h->access("magnet");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("man");
  h->access("map");
  h->access("map");
  h->access("map");
  h->access("map");
  h->access("map");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("maze");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meat");
  h->access("meteor");
  h->access("microscope");
  h->access("microscope");
  h->access("microscope");
  h->access("microscope");
  h->access("microscope");
  h->access("microscope");
  h->access("microscope");
  h->access("milk");
  h->access("milk");
  h->access("milk");
  h->access("milk");
  h->access("milk");
  h->access("milk");
  h->access("milk");
  h->access("milk");
  h->access("milk");
  h->access("milk");
  h->access("milk");
  h->access("milk");
  h->access("milkshake");
  h->access("milkshake");
  h->access("milkshake");
  h->access("milkshake");
  h->access("milkshake");
  h->access("milkshake");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("mist");
  h->access("money");
  h->access("money");
  h->access("money");
  h->access("monster");
  h->access("monster");
  h->access("mosquito");
  h->access("mosquito");
  h->access("mosquito");
  h->access("mosquito");
  h->access("mosquito");
  h->access("mosquito");
  h->access("mosquito");
  h->access("mosquito");
  h->access("mosquito");
  h->access("mosquito");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("mouth");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("nail");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("navy");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("necklace");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("needle");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("onion");
  h->access("paintbrush");
  h->access("paintbrush");
  h->access("paintbrush");
  h->access("paintbrush");
  h->access("paintbrush");
  h->access("pants");
  h->access("pants");
  h->access("pants");
  h->access("pants");
  h->access("pants");
  h->access("pants");
  h->access("pants");
  h->access("pants");
  h->access("pants");
  h->access("pants");
  h->access("pants");
  h->access("parachute");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("passport");
  h->access("pebble");
  h->access("pebble");
  h->access("pebble");
  h->access("pebble");
  h->access("pebble");
  h->access("pendulum");
  h->access("pendulum");
  h->access("pendulum");
  h->access("pendulum");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("pepper");
  h->access("perfume");
  h->access("perfume");
  h->access("perfume");
  h->access("perfume");
  h->access("perfume");
  h->access("perfume");
  h->access("perfume");
  h->access("perfume");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("pillow");
  h->access("plane");
  h->access("plane");
  h->access("plane");
  h->access("plane");
  h->access("plane");
  h->access("plane");
  h->access("plane");
  h->access("plane");
  h->access("planet");
  h->access("planet");
  h->access("planet");
  h->access("planet");
  h->access("planet");
  h->access("planet");
  h->access("planet");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("pocket");
  h->access("postoffice");
  h->access("postoffice");
  h->access("postoffice");
  h->access("postoffice");
  h->access("postoffice");
  h->access("postoffice");
  h->access("postoffice");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("potato");
  h->access("printer");
  h->access("printer");
  h->access("printer");
  h->access("printer");
  h->access("printer");
  h->access("printer");
  h->access("printer");
  h->access("printer");
  h->access("printer");
  h->access("prison");
  h->access("pyramid");
  h->access("pyramid");
  h->access("pyramid");
  h->access("pyramid");
  h->access("pyramid");
  h->access("pyramid");
  h->access("pyramid");
  h->access("radar");
  h->access("radar");
  h->access("radar");
  h->access("rainbow");
  h->access("rainbow");
  h->access("rainbow");
  h->access("rainbow");
  h->access("rainbow");
  h->access("rainbow");
  h->access("rainbow");
  h->access("rainbow");
  h->access("record");
  h->access("record");
  h->access("record");
  h->access("record");
  h->access("record");
  h->access("record");
  h->access("record");
  h->access("record");
  h->access("record");
  h->access("record");
  h->access("record");
  h->access("restaurant");
  h->access("restaurant");
  h->access("restaurant");
  h->access("restaurant");
  h->access("restaurant");
  h->access("restaurant");
  h->access("restaurant");
  h->access("restaurant");
  h->access("restaurant");
  h->access("restaurant");
  h->access("restaurant");
  h->access("rifle");
  h->access("rifle");
  h->access("rifle");
  h->access("rifle");
  h->access("rifle");
  h->access("rifle");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("ring");
  h->access("robot");
  h->access("robot");
  h->access("robot");
  h->access("robot");
  h->access("robot");
  h->access("robot");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rock");
  h->access("rocket");
  h->access("rocket");
  h->access("rocket");
  h->access("rocket");
  h->access("rocket");
  h->access("rocket");
  h->access("rocket");
  h->access("rocket");
  h->access("rocket");
  h->access("rocket");
  h->access("roof");
  h->access("roof");
  h->access("roof");
  h->access("room");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("rope");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("saddle");
  h->access("salt");
  h->access("salt");
  h->access("salt");
  h->access("salt");
  h->access("salt");
  h->access("salt");
  h->access("salt");
  h->access("salt");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandpaper");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("sandwich");
  h->access("satellite");
  h->access("satellite");
  h->access("school");
  h->access("school");
  h->access("school");
  h->access("school");
  h->access("school");
  h->access("school");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("sex");
  h->access("ship");
  h->access("ship");
  h->access("ship");
  h->access("ship");
  h->access("ship");
  h->access("ship");
  h->access("shoes");
  h->access("shoes");
  h->access("shoes");
  h->access("shoes");
  h->access("shoes");
  h->access("shoes");
  h->access("shoes");
  h->access("shoes");
  h->access("shop");
  h->access("shop");
  h->access("shop");
  h->access("shop");
  h->access("shop");
  h->access("shop");
  h->access("shop");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("shower");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("signature");
  h->access("skeleton");
  h->access("skeleton");
  h->access("skeleton");
  h->access("skeleton");
  h->access("skeleton");
  h->access("slave");
  h->access("slave");
  h->access("slave");
  h->access("slave");
  h->access("slave");
  h->access("slave");
  h->access("slave");
  h->access("slave");
  h->access("slave");
  h->access("slave");
  h->access("slave");
  h->access("snail");
  h->access("snail");
  h->access("snail");
  h->access("snail");
  h->access("snail");
  h->access("software");
  h->access("software");
  h->access("software");
  h->access("software");
  h->access("software");
  h->access("software");
  h->access("software");
  h->access("software");
  h->access("software");
  h->access("software");
  h->access("software");
  h->access("solid");
  h->access("solid");
  h->access("solid");
  h->access("solid");
  h->access("solid");
  h->access("solid");
  h->access("solid");
  h->access("solid");
  h->access("solid");
  h->access("spaceshuttle");
  h->access("spaceshuttle");
  h->access("spaceshuttle");
  h->access("spectrum");
  h->access("spectrum");
  h->access("spectrum");
  h->access("spectrum");
  h->access("spectrum");
  h->access("spectrum");
  h->access("spectrum");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("sphere");
  h->access("spice");
  h->access("spice");
  h->access("spice");
  h->access("spice");
  h->access("spice");
  h->access("spice");
  h->access("spice");
  h->access("spice");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spiral");
  h->access("spoon");
  h->access("spoon");
  h->access("spoon");
  h->access("sportscar");
  h->access("sportscar");
  h->access("sportscar");
  h->access("sportscar");
  h->access("sportscar");
  h->access("sportscar");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("spotlight");
  h->access("square");
  h->access("square");
  h->access("square");
  h->access("square");
  h->access("square");
  h->access("square");
  h->access("staircase");
  h->access("staircase");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("star");
  h->access("stomach");
  h->access("stomach");
  h->access("stomach");
  h->access("stomach");
  h->access("stomach");
  h->access("stomach");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sun");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("sunglasses");
  h->access("surveyor");
  h->access("surveyor");
  h->access("surveyor");
  h->access("surveyor");
  h->access("surveyor");
  h->access("surveyor");
  h->access("surveyor");
  h->access("swimming");
  h->access("swimming");
  h->access("swimming");
  h->access("swimming");
  h->access("swimming");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("sword");
  h->access("table");
  h->access("table");
  h->access("table");
  h->access("table");
  h->access("table");
  h->access("table");
  h->access("table");
  h->access("table");
  h->access("table");
  h->access("table");
  h->access("table");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("tapestry");
  h->access("teeth");
  h->access("teeth");
  h->access("teeth");
  h->access("teeth");
  h->access("teeth");
  h->access("teeth");
  h->access("teeth");
  h->access("teeth");
  h->access("telescope");
  h->access("telescope");
  h->access("telescope");
  h->access("telescope");
  h->access("telescope");
  h->access("telescope");
  h->access("television");
  h->access("television");
  h->access("television");
  h->access("tennis");
  h->access("tennis");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("thermometer");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("tiger");
  h->access("toilet");
  h->access("toilet");
  h->access("toilet");
  h->access("toilet");
  h->access("toilet");
  h->access("toilet");
  h->access("toilet");
  h->access("toilet");
  h->access("toilet");
  h->access("toilet");
  h->access("tongue");
  h->access("tongue");
  h->access("tongue");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torch");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("torpedo");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("train");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("treadmill");
  h->access("triangle");
  h->access("triangle");
  h->access("triangle");
  h->access("triangle");
  h->access("triangle");
  h->access("triangle");
  h->access("triangle");
  h->access("triangle");
  h->access("triangle");
  h->access("triangle");
  h->access("triangle");
  h->access("tunnel");
  h->access("tunnel");
  h->access("tunnel");
  h->access("tunnel");
  h->access("tunnel");
  h->access("tunnel");
  h->access("tunnel");
  h->access("tunnel");
  h->access("tunnel");
  h->access("tunnel");
  h->access("tunnel");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("typewriter");
  h->access("umbrella");
  h->access("umbrella");
  h->access("umbrella");
  h->access("umbrella");
  h->access("umbrella");
  h->access("umbrella");
  h->access("umbrella");
  h->access("umbrella");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vacuum");
  h->access("vampire");
  h->access("vampire");
  h->access("vampire");
  h->access("vampire");
  h->access("vampire");
  h->access("vampire");
  h->access("vampire");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("videotape");
  h->access("vulture");
  h->access("vulture");
  h->access("vulture");
  h->access("vulture");
  h->access("vulture");
  h->access("vulture");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("water");
  h->access("weapon");
  h->access("weapon");
  h->access("weapon");
  h->access("weapon");
  h->access("weapon");
  h->access("weapon");
  h->access("weapon");
  h->access("weapon");
  h->access("weapon");
  h->access("weapon");
  h->access("weapon");
  h->access("weapon");
  h->access("web");
  h->access("web");
  h->access("web");
  h->access("wheelchair");
  h->access("wheelchair");
  h->access("wheelchair");
  h->access("wheelchair");
  h->access("window");
  h->access("window");
  h->access("window");
  h->access("window");
  h->access("woman");
  h->access("woman");
  h->access("woman");
  h->access("woman");
  h->access("woman");
  h->access("woman");
  h->access("woman");
  h->access("woman");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  h->access("worm");
  string w = "comfort";
  int k = 4;
  vector<vector<int> > A = h->getCompletions(w, k);
  for (int i = 0; i <= w.size(); i++) {
    cout << "<";
    for (int j=0; j < k-1; j++) cout << A[i][j] << ",";
    cout << A[i][k-1] << "> ";
  }
  cout << endl;

  delete h;

}

#endif




